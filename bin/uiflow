#!/usr/bin/env node

const fs = require("fs");
const program = require('commander');
const { promisify } = require('util');

const { UIFlow } = require("../index.js");


/**
 * 
 * @param {*} error 
 */
const exitWithError = (error) => {
    console.error(error);
    process.exit(-1);
};


const main = async () => {
    program
        .version('1.1.8-fork')
        .usage('[options]')
        .option('-i, --input <file>', 'Set target \'FILE\' or \'DIR\' like ./sample/xx.txt')
        .option('-o, --output <file>', 'Write output to \'FILE\'')
        .option('-f, --format <val>', 'Set output format')
        .parse(process.argv);


    if( ! program.input ) {
        exitWithError("Should be set inputFiles like 'uiflow -i target.txt'");
    }

    if (! ['dot', 'json'].includes(program.format) ) {
        exitWithError("SHould be set format 'dot' or 'json'");
    }

    const uiflow = new UIFlow();

    try {
        const uiflowText = await promisify(fs.readFile)(program.input, encoding='utf-8');

        if (program.format === 'dot') {
            const dotText = await uiflow.generateDotString(uiflowText);
            if (program.output) {
                fs.writeFileSync(program.output, dotText);
            }

        } else if (program.format === 'json') {
            const jsonObject = await uiflow.generateJSON(uiflowText);
            if (program.output) {
                fs.writeFileSync(program.output, JSON.stringify(jsonObject));
            }

        } else {
            throw Error('Not Implemented');
        }

    } catch (error) {
        exitWithError(error);
    }
};

main();
